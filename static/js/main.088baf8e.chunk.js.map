{"version":3,"sources":["component/Country.jsx","component/TableList.jsx","component/TableReport.jsx","component/WorldFlags.jsx","component/Graph.jsx","component/FetchJson.jsx","component/About.jsx","component/Navigation.jsx","component/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Country","state","country","value","queryString","parse","this","props","location","search","Papa","download","header","complete","results","newData","data","filter","params","UID","id","setState","console","log","Country_Region","Component","TableList","Fragment","map","key","className","Confirmed","Recovered","Deaths","TableReport","sortByCountryName","A","B","handleChange","e","target","length","findCountry","report","toLowerCase","indexOf","seachCountry","onCountryClicked","colSpan","width","height","viewBox","fill","xmlns","fillRule","d","clipRule","type","placeholder","aria-label","aria-describedby","onChange","scope","onClick","onSortByCountryName","hidden","onSortByConfirmed","onSortByRecovered","onSortByDeaths","Graph","labels","datasets","label","backgroundColor","style","textAlign","options","responsive","FetchJson","countries","topCountries","totalConfirmed","sortByConfirmed","Number","handleOnSortByConfirmed","event","handelOnSortBy","sortByRecovered","sortByDeaths","handleOnSortByCountryName","handleOnSortByRecovered","handleOnSortByDeaths","sortOperation","sort","sortedData","total","sortedTopCountry","topCountry","i","push","topThree","ISO3","x","toString","replace","href","numberWithCommas","About","notify","toast","Navigation","exact","to","data-toggle","data-target","aria-controls","aria-expanded","role","aria-haspopup","aria-labelledby","tabIndex","aria-disabled","Footer","color","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.088baf8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport queryString from \"query-string\";\r\nclass Country extends Component {\r\n  state = {\r\n    country: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const value = queryString.parse(this.props.location.search);\r\n    const url =\r\n      \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\r\n\r\n    Papa.parse(url, {\r\n      download: true,\r\n      header: true,\r\n      complete: (results) => {\r\n        let newData = results.data.filter(function (params) {\r\n          return params.UID === value.id;\r\n        });\r\n        this.setState({\r\n          country: newData[0],\r\n        });\r\n      },\r\n    });\r\n  }\r\n  render() {\r\n    console.log(this.state.country.Country_Region);\r\n    return <h1>Country {this.state.country.Country_Region}</h1>;\r\n  }\r\n}\r\n\r\nexport default Country;\r\n","import React, { Component } from \"react\";\r\nclass TableList extends Component {\r\n  state = {};\r\n  render() {\r\n    const { country } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {country.map((country) => (\r\n          <tr key={country.UID}>\r\n            <td>{country.Country_Region}</td>\r\n            <td>\r\n              <span className=\"badge badge-primary badge-pill\">\r\n                {country.Confirmed}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span className=\"badge badge-success badge-pill\">\r\n                {country.Recovered}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <span className=\"badge badge-danger badge-pill\">\r\n                {country.Deaths}\r\n              </span>\r\n            </td>\r\n            {/* <td>\r\n                          <span className=\"badge badge-info badge-pill\">\r\n                            {country.Active}\r\n                          </span>\r\n                        </td> */}\r\n          </tr>\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableList;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Country from \"./Country\";\r\nimport TableList from \"./TableList\";\r\nclass TableReport extends Component {\r\n  // state = {\r\n  //   country: [],\r\n  //   seachCountry: [],\r\n  // };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      country: [],\r\n      seachCountry: [],\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return { country: props.report };\r\n  }\r\n  sortByCountryName = (A, B) => {\r\n    console.log(\"sortByCountryName\");\r\n    if (A.Country_Region > B.Country_Region) return 1;\r\n    else if (A.Country_Region < B.Country_Region) return -1;\r\n    else return 0;\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value.length > 0) {\r\n      const data = [...this.props.report];\r\n      const findCountry = data.filter(function (params) {\r\n        return (\r\n          params.Country_Region.toLowerCase().indexOf(\r\n            e.target.value.toLowerCase()\r\n          ) >= 0\r\n        );\r\n      });\r\n      this.setState({ seachCountry: findCountry });\r\n    } else {\r\n      this.setState({ seachCountry: [] });\r\n    }\r\n  };\r\n\r\n  onCountryClicked = (e) => {\r\n    console.log(e);\r\n    return e;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped table-dark table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"4\">\r\n                <div className=\"input-group flex-nowrap\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                      <svg\r\n                        className=\"bi bi-search\"\r\n                        width=\"1em\"\r\n                        height=\"1em\"\r\n                        viewBox=\"0 0 16 16\"\r\n                        fill=\"currentColor\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M10.442 10.442a1 1 0 011.415 0l3.85 3.85a1 1 0 01-1.414 1.415l-3.85-3.85a1 1 0 010-1.415z\"\r\n                          clipRule=\"evenodd\"\r\n                        />\r\n                        <path\r\n                          fillRule=\"evenodd\"\r\n                          d=\"M6.5 12a5.5 5.5 0 100-11 5.5 5.5 0 000 11zM13 6.5a6.5 6.5 0 11-13 0 6.5 6.5 0 0113 0z\"\r\n                          clipRule=\"evenodd\"\r\n                        />\r\n                      </svg>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"search by country name\"\r\n                    aria-label=\"search by country name\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" onClick={this.props.onSortByCountryName}>\r\n                Country\r\n                <span hidden={true}> &#8681;</span>\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={this.props.onSortByConfirmed}\r\n                className=\"bg-primary\"\r\n              >\r\n                Cases\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={this.props.onSortByRecovered}\r\n                className=\"bg-success\"\r\n              >\r\n                Recovered\r\n              </th>\r\n              <th\r\n                scope=\"col\"\r\n                onClick={this.props.onSortByDeaths}\r\n                className=\"bg-danger\"\r\n              >\r\n                Deaths\r\n              </th>\r\n              {/* <th scope=\"col\">Active</th> */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <TableList\r\n              country={\r\n                this.state.seachCountry.length > 0\r\n                  ? this.state.seachCountry.map((country) => country)\r\n                  : this.state.country.map((country) => country)\r\n              }\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableReport;\r\n","import React, { Component } from \"react\";\r\nimport Countries from \"world_countries_lists/data/en/countries.json\";\r\n\r\nclass WorldFlags extends Component {\r\n  state = {\r\n    topCountries: this.props.topCountries,\r\n  };\r\n\r\n  flags = (country) => {\r\n    // // iterate over each element in the array\r\n    for (let i = 0; i < Countries.length; i++) {\r\n      // look for the entry with a matching `code` value\r\n      if (Countries[i].alpha3 === country) {\r\n        // we found it\r\n        // obj[i].name is the matched result\r\n        return Countries[i].alpha2;\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    const { topCountries } = this.state;\r\n\r\n    if (topCountries === null) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          id=\"carouselExampleCaptions\"\r\n          className=\"carousel slide\"\r\n          data-ride=\"carousel\"\r\n        >\r\n          <ol className=\"carousel-indicators\">\r\n            <li\r\n              data-target=\"#carouselExampleCaptions\"\r\n              data-slide-to=\"0\"\r\n              className=\"active\"\r\n            ></li>\r\n            <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\"></li>\r\n            <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\"></li>\r\n          </ol>\r\n          <div className=\"carousel-inner\">\r\n            <div className=\"carousel-item active\">\r\n              <img\r\n                src={\r\n                  \"https://www.worldometers.info/img/flags/\" +\r\n                  this.flags(topCountries[0]) +\r\n                  \"-flag.gif\"\r\n                }\r\n                className=\"d-block w-100\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h5>First slide label</h5>\r\n                <p>\r\n                  Nulla vitae elit libero, a pharetra augue mollis interdum.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img\r\n                src={\r\n                  \"https://www.worldometers.info/img/flags/\" +\r\n                  this.flags(topCountries[1]) +\r\n                  \"-flag.gif\"\r\n                }\r\n                className=\"d-block w-100\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h5>Second slide label</h5>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"carousel-item\">\r\n              <img\r\n                src={\r\n                  \"https://www.worldometers.info/img/flags/\" +\r\n                  this.flags(topCountries[2]) +\r\n                  \"-flag.gif\"\r\n                }\r\n                className=\"d-block w-100\"\r\n                alt=\"...\"\r\n              />\r\n              <div className=\"carousel-caption d-none d-md-block\">\r\n                <h5>Third slide label</h5>\r\n                <p>\r\n                  Praesent commodo cursus magna, vel scelerisque nisl\r\n                  consectetur.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <a\r\n            className=\"carousel-control-prev\"\r\n            href=\"#carouselExampleCaptions\"\r\n            role=\"button\"\r\n            data-slide=\"prev\"\r\n          >\r\n            <span\r\n              className=\"carousel-control-prev-icon\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n          <a\r\n            className=\"carousel-control-next\"\r\n            href=\"#carouselExampleCaptions\"\r\n            role=\"button\"\r\n            data-slide=\"next\"\r\n          >\r\n            <span\r\n              className=\"carousel-control-next-icon\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorldFlags;\r\n","import React, { Component } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nclass Graph extends Component {\r\n  state = {};\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: {\r\n        labels: [\"1\", \"2\", \"3\", \"4\"],\r\n        datasets: [\r\n          {\r\n            label: \"Cases\",\r\n            backgroundColor: \"rgba(0,0,255,0.50)\",\r\n            data: [4, 5, 1, 10, 32, 2, 20],\r\n          },\r\n          {\r\n            label: \"Recovered\",\r\n            backgroundColor: \"rgba(0,255,0,0.50)\",\r\n            data: [14, 15, 21, 0, 12, 4, 12],\r\n          },\r\n          {\r\n            label: \"Deaths\",\r\n            backgroundColor: \"rgba(255,0,0,0.50)\",\r\n            data: [7, 4, 11, 20, 21, 2, 5],\r\n          },\r\n        ],\r\n      },\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"mx-auto\">\r\n        <h3 className=\"display-1\" style={{ textAlign: \"center\" }}>\r\n          Covid19 Global Graph\r\n        </h3>\r\n        <Line options={{ responsive: true }} data={this.state.data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React, { Component } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport TableReport from \"./TableReport\";\r\nimport WorldFlags from \"./WorldFlags\";\r\nimport Graph from \"./Graph\";\r\n\r\nclass FetchJson extends Component {\r\n  state = {\r\n    countries: [],\r\n    topCountries: null,\r\n    totalConfirmed: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\r\n\r\n    Papa.parse(url, {\r\n      download: true,\r\n      header: true,\r\n      complete: (results) => {\r\n        let newData = results.data.filter(function (params) {\r\n          return params.Country_Region !== \"\";\r\n        });\r\n\r\n        const sortedData = newData.sort(this.sortByCountryName);\r\n        let totalConfirmed = 0;\r\n\r\n        sortedData.map((total) => {\r\n          totalConfirmed += Number(total.Confirmed);\r\n        });\r\n\r\n        //Top three Country with the highest cases\r\n        const sortedTopCountry = newData.sort(this.sortByConfirmed);\r\n        let topCountry = [];\r\n        for (let i = 0; i < 3; i++) {\r\n          topCountry.push(sortedTopCountry[i]);\r\n        }\r\n\r\n        let topThree = [];\r\n        topCountry.map((country) => {\r\n          topThree.push(country.ISO3.toLowerCase());\r\n        });\r\n        this.setState({ topCountries: topThree });\r\n        this.setState({\r\n          countries: sortedData,\r\n          totalConfirmed: totalConfirmed,\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  sortByCountryName = (A, B) => {\r\n    if (A.Country_Region > B.Country_Region) return 1;\r\n    else if (A.Country_Region < B.Country_Region) return -1;\r\n    else return 0;\r\n  };\r\n  sortByConfirmed = (A, B) => {\r\n    if (Number(B.Confirmed) > Number(A.Confirmed)) return 1;\r\n    else if (Number(B.Confirmed) < Number(A.Confirmed)) return -1;\r\n    else return 0;\r\n  };\r\n\r\n  handleOnSortByConfirmed = (event) => {\r\n    this.handelOnSortBy(event, this.sortByConfirmed);\r\n  };\r\n\r\n  sortByRecovered = (A, B) => {\r\n    if (Number(B.Recovered) > Number(A.Recovered)) return 1;\r\n    else if (Number(B.Recovered) < Number(A.Recovered)) return -1;\r\n    else return 0;\r\n  };\r\n\r\n  sortByDeaths = (A, B) => {\r\n    if (Number(B.Deaths) > Number(A.Deaths)) return 1;\r\n    else if (Number(B.Deaths) < Number(A.Deaths)) return -1;\r\n    else return 0;\r\n  };\r\n\r\n  handleOnSortByCountryName = (event) => {\r\n    this.handelOnSortBy(event, this.sortByCountryName);\r\n  };\r\n  handleOnSortByRecovered = (event) => {\r\n    this.handelOnSortBy(event, this.sortByRecovered);\r\n  };\r\n  handleOnSortByDeaths = (event) => {\r\n    this.handelOnSortBy(event, this.sortByDeaths);\r\n  };\r\n\r\n  handelOnSortBy = (event, sortOperation) => {\r\n    const countries = [...this.state.countries];\r\n    countries.sort(sortOperation);\r\n    this.setState({ countries });\r\n  };\r\n\r\n  numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  }\r\n  render() {\r\n    const { topCountries } = this.state;\r\n\r\n    if (topCountries === null) {\r\n      return null;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card text-center\">\r\n          <div className=\"card-header\">Featured Covid19</div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Covid 19 Global Report</h5>\r\n            <p className=\"card-text\">\r\n              List of Global report for Covid19, this live data gets from Johns\r\n              Hopkins University\r\n            </p>\r\n            <a\r\n              href=\"https://coronavirus.jhu.edu/\"\r\n              target=\"_blank\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Johns Hopkins University\r\n            </a>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">\r\n            Global Confrimed Cases:{\" \"}\r\n            {this.numberWithCommas(this.state.totalConfirmed)}\r\n          </div>\r\n        </div>\r\n        <Graph />\r\n        {/* <WorldFlags topCountries={this.state.topCountries} /> */}\r\n\r\n        <TableReport\r\n          report={this.state.countries}\r\n          onSortByCountryName={this.handleOnSortByCountryName}\r\n          onSortByConfirmed={this.handleOnSortByConfirmed}\r\n          onSortByRecovered={this.handleOnSortByRecovered}\r\n          onSortByDeaths={this.handleOnSortByDeaths}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FetchJson;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nclass About extends Component {\r\n  state = {};\r\n  notify = () => toast(\"Wow so easy !\");\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        About Page!\r\n        <button onClick={this.notify}>Notify !</button>\r\n        <ToastContainer />\r\n        <div className=\"footer\">Footer</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <NavLink className=\"navbar-brand\" exact to=\"/\">\r\n          Navbar\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/\">\r\n                Home\r\n                {/* Home <span className=\"sr-only\">(current)</span> */}\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/About\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <NavLink\r\n                className=\"nav-link dropdown-toggle\"\r\n                id=\"navbarDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n                exact\r\n                to=\"/\"\r\n              >\r\n                Dropdown\r\n              </NavLink>\r\n\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <NavLink className=\"dropdown-item\" to=\"/\">\r\n                  Action\r\n                </NavLink>\r\n                <NavLink className=\"dropdown-item\" to=\"/\">\r\n                  Another action\r\n                </NavLink>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <NavLink className=\"dropdown-item\" to=\"/\">\r\n                  Something else here\r\n                </NavLink>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                className=\"nav-link disabled\"\r\n                to=\"/\"\r\n                tabIndex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                Disabled\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer\r\n          className=\"page-footer font-small teal pt-4 pt-success bg-dark\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                <h5 className=\"text-uppercase font-weight-bold\">\r\n                  Footer text 1\r\n                </h5>\r\n                <p>\r\n                  Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                  Expedita sapiente sint, nulla, nihil repudiandae commodi\r\n                  voluptatibus corrupti animi sequi aliquid magnam debitis,\r\n                  maxime quam recusandae harum esse fugiat. Itaque, culpa?\r\n                </p>\r\n              </div>\r\n\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n              <div className=\"col-md-6 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase font-weight-bold\">\r\n                  Footer text 2\r\n                </h5>\r\n                <p>\r\n                  Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                  Optio deserunt fuga perferendis modi earum commodi aperiam\r\n                  temporibus quod nulla nesciunt aliquid debitis ullam omnis\r\n                  quos ipsam, aspernatur id excepturi hic.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"footer-copyright text-center py-3\">\r\n            © 2020 Copyright:\r\n            <a href=\"https://github.com/NahomKibreab/covid19-react-project\">\r\n              {\" \"}\r\n              Nahom Mehanzel\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FetchJson from \"./component/FetchJson\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport About from \"./component/About\";\nimport Navigation from \"./component/Navigation\";\nimport Footer from \"./component/Footer\";\nimport Country from \"./component/Country\";\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />\n      <Switch>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/country\" component={Country} />\n        <Route path=\"/\" component={FetchJson} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}