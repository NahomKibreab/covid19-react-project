{"version":3,"sources":["component/TableReport.jsx","component/FetchJson.jsx","component/About.jsx","component/Navigation.jsx","component/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["TableReport","state","i","className","colSpan","id","type","placeholder","aria-label","aria-describedby","scope","onClick","this","props","onSortByCountryName","hidden","onSortByConfirmed","report","map","country","key","UID","Country_Region","Confirmed","Recovered","Deaths","Active","Component","FetchJson","countries","totalConfirmed","total","length","console","log","sortByCountryName","A","B","sortByConfirmed","Number","handleOnSortByConfirmed","event","handelOnSortBy","handleOnSortByCountryName","sortOperation","table","sort","setState","Papa","parse","download","header","complete","results","newData","data","filter","params","href","target","About","notify","toast","Navigation","data-toggle","data-target","aria-controls","aria-expanded","exact","to","role","aria-haspopup","aria-labelledby","tabIndex","aria-disabled","Footer","style","color","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"mTA0EeA,E,4MAxEbC,MAAQ,G,EACRC,EAAI,E,uDAEF,OACE,6BACE,2BAAOC,UAAU,8CACf,+BACE,4BACE,wBAAIC,QAAQ,KACV,yBAAKD,UAAU,2BACb,yBAAKA,UAAU,uBACb,+BACA,0BAAMA,UAAU,mBAAmBE,GAAG,gBAAtC,kBAIF,2BACEC,KAAK,OACLH,UAAU,eACVI,YAAY,iBACZC,aAAW,iBACXC,mBAAiB,oBAKzB,4BACE,wBAAIC,MAAM,MAAMC,QAASC,KAAKC,MAAMC,qBAApC,UAEE,0BAAMC,QAAQ,GAAd,YAEF,wBAAIL,MAAM,MAAMC,QAASC,KAAKC,MAAMG,mBAApC,aAGA,wBAAIN,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,YAGJ,+BACGE,KAAKC,MAAMI,OAAOC,KAAI,SAACC,GAAD,OACrB,wBAAIC,IAAKD,EAAQE,KACf,4BAAKF,EAAQG,gBACb,4BACE,0BAAMnB,UAAU,kCACbgB,EAAQI,YAGb,4BACE,0BAAMpB,UAAU,kCACbgB,EAAQK,YAGb,4BACE,0BAAMrB,UAAU,iCACbgB,EAAQM,SAGb,4BACE,0BAAMtB,UAAU,+BACbgB,EAAQO,oB,GA7DHC,aC0FXC,E,4MAvFb3B,MAAQ,CACN4B,UAAW,GACXC,eAAgB,G,EAmBlBA,eAAiB,SAACC,GAGhB,IAFA,IAES7B,EAAI,EAAGA,GAAK6B,EAAMC,OAAQ9B,IAEjC+B,QAAQC,IAAIH,EAAM7B,K,EAGtBiC,kBAAoB,SAACC,EAAGC,GACtB,OAAID,EAAEd,eAAiBe,EAAEf,eAAuB,EACvCc,EAAEd,eAAiBe,EAAEf,gBAAwB,EAC1C,G,EAEdgB,gBAAkB,SAACF,EAAGC,GACpB,OAAIE,OAAOF,EAAEd,WAAagB,OAAOH,EAAEb,WAAmB,EAC7CgB,OAAOF,EAAEd,WAAagB,OAAOH,EAAEb,YAAoB,EAChD,G,EAEdiB,wBAA0B,SAACC,GACzB,EAAKC,eAAeD,EAAO,EAAKH,kB,EAGlCK,0BAA4B,SAACF,GAC3B,EAAKC,eAAeD,EAAO,EAAKN,oB,EAGlCO,eAAiB,SAACD,EAAOG,GACvB,IAAMf,EAAS,YAAO,EAAK5B,MAAM4B,WACjCI,QAAQY,MAAMhB,GACdA,EAAUiB,KAAKF,GACf,EAAKG,SAAS,CAAElB,e,kEA9CG,IAAD,OAIlBmB,IAAKC,MAFH,4FAEc,CACdC,UAAU,EACVC,QAAQ,EACRC,SAAU,SAACC,GACT,IAAIC,EAAUD,EAAQE,KAAKC,QAAO,SAAUC,GAC1C,MAAiC,KAA1BA,EAAOnC,kBAEhB,EAAKyB,SAAS,CAAElB,UAAWyB,S,+BAuC/B,OACE,yBAAKnD,UAAU,aACZS,KAAKkB,eAAelB,KAAKX,MAAM4B,WAChC,yBAAK1B,UAAU,oBACb,yBAAKA,UAAU,eAAf,oBACA,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,0BACA,uBAAGA,UAAU,aAAb,wFAIA,uBACEuD,KAAK,+BACLC,OAAO,SACPxD,UAAU,mBAHZ,6BAQF,yBAAKA,UAAU,0BAAf,eAGF,kBAAC,EAAD,CACEc,OAAQL,KAAKX,MAAM4B,UACnBf,oBAAqBF,KAAK+B,0BAC1B3B,kBAAmBJ,KAAK4B,+B,GAjFVb,a,gBCcTiC,E,4MAdb3D,MAAQ,G,EACR4D,OAAS,kBAAMC,YAAM,kB,uDAEnB,OACE,2CAEE,4BAAQnD,QAASC,KAAKiD,QAAtB,YACA,kBAAC,IAAD,MACA,yBAAK1D,UAAU,UAAf,e,GATYwB,a,QC0ELoC,EA1EI,WACjB,OACE,6BACE,yBAAK5D,UAAU,+CACb,uBAAGA,UAAU,eAAeuD,KAAK,KAAjC,UAGA,4BACEvD,UAAU,iBACVG,KAAK,SACL0D,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACd3D,aAAW,qBAEX,0BAAML,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BE,GAAG,0BAC3C,wBAAIF,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWiE,OAAK,EAACC,GAAG,KAAvC,SAKF,wBAAIlE,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWkE,GAAG,UAAjC,UAIF,wBAAIlE,UAAU,qBACZ,uBACEA,UAAU,2BACVuD,KAAK,IACLrD,GAAG,iBACHiE,KAAK,SACLN,cAAY,WACZO,gBAAc,OACdJ,gBAAc,SAPhB,YAWA,yBAAKhE,UAAU,gBAAgBqE,kBAAgB,kBAC7C,uBAAGrE,UAAU,gBAAgBuD,KAAK,KAAlC,UAGA,uBAAGvD,UAAU,gBAAgBuD,KAAK,KAAlC,kBAGA,yBAAKvD,UAAU,qBACf,uBAAGA,UAAU,gBAAgBuD,KAAK,KAAlC,yBAKJ,wBAAIvD,UAAU,YACZ,uBACEA,UAAU,oBACVuD,KAAK,IACLe,SAAS,KACTC,gBAAc,QAJhB,kBCPCC,E,4MAnDb1E,MAAQ,G,uDAEN,OACE,6BACE,4BACEE,UAAU,sDACVyE,MAAO,CAAEC,MAAO,UAEhB,yBAAK1E,UAAU,4CACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mCAAd,iBAGA,qQAQF,wBAAIA,UAAU,kCAEd,yBAAKA,UAAU,yBACb,wBAAIA,UAAU,mCAAd,iBAGA,0PAUN,yBAAKA,UAAU,qCAAf,uBAEE,uBAAGuD,KAAK,yDACL,IADH,yB,GAzCS/B,aCoBNmD,MAbf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWpB,IAChC,kBAAC,IAAD,CAAOmB,KAAK,IAAIC,UAAWpD,KAE7B,kBAAC,EAAD,QCJcqD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCPNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLjE,QAAQiE,MAAMA,EAAMC,c","file":"static/js/main.db3f2a32.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass TableReport extends Component {\r\n  state = {};\r\n  i = 1;\r\n  render() {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped table-dark table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th colSpan=\"5\">\r\n                <div className=\"input-group flex-nowrap\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span></span>\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                      Seach Country\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"search by name\"\r\n                    aria-label=\"search by name\"\r\n                    aria-describedby=\"basic-addon1\"\r\n                  />\r\n                </div>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"col\" onClick={this.props.onSortByCountryName}>\r\n                Country\r\n                <span hidden={true}> &#8681;</span>\r\n              </th>\r\n              <th scope=\"col\" onClick={this.props.onSortByConfirmed}>\r\n                Confirmed\r\n              </th>\r\n              <th scope=\"col\">Deaths</th>\r\n              <th scope=\"col\">Recovered</th>\r\n              <th scope=\"col\">Active</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.report.map((country) => (\r\n              <tr key={country.UID}>\r\n                <td>{country.Country_Region}</td>\r\n                <td>\r\n                  <span className=\"badge badge-primary badge-pill\">\r\n                    {country.Confirmed}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"badge badge-success badge-pill\">\r\n                    {country.Recovered}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"badge badge-danger badge-pill\">\r\n                    {country.Deaths}\r\n                  </span>\r\n                </td>\r\n                <td>\r\n                  <span className=\"badge badge-info badge-pill\">\r\n                    {country.Active}\r\n                  </span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableReport;\r\n","import React, { Component } from \"react\";\r\nimport Papa from \"papaparse\";\r\nimport TableReport from \"./TableReport\";\r\nclass FetchJson extends Component {\r\n  state = {\r\n    countries: [],\r\n    totalConfirmed: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\r\n\r\n    Papa.parse(url, {\r\n      download: true,\r\n      header: true,\r\n      complete: (results) => {\r\n        let newData = results.data.filter(function (params) {\r\n          return params.Country_Region !== \"\";\r\n        });\r\n        this.setState({ countries: newData });\r\n      },\r\n    });\r\n  }\r\n\r\n  totalConfirmed = (total) => {\r\n    const totalConfirmed = 0;\r\n    const totals = [];\r\n    for (let i = 0; i <= total.length; i++) {\r\n      // totalConfirmed += this.state.countries[1][]\r\n      console.log(total[i]);\r\n    }\r\n  };\r\n  sortByCountryName = (A, B) => {\r\n    if (A.Country_Region > B.Country_Region) return 1;\r\n    else if (A.Country_Region < B.Country_Region) return -1;\r\n    else return 0;\r\n  };\r\n  sortByConfirmed = (A, B) => {\r\n    if (Number(B.Confirmed) > Number(A.Confirmed)) return 1;\r\n    else if (Number(B.Confirmed) < Number(A.Confirmed)) return -1;\r\n    else return 0;\r\n  };\r\n  handleOnSortByConfirmed = (event) => {\r\n    this.handelOnSortBy(event, this.sortByConfirmed);\r\n  };\r\n\r\n  handleOnSortByCountryName = (event) => {\r\n    this.handelOnSortBy(event, this.sortByCountryName);\r\n  };\r\n\r\n  handelOnSortBy = (event, sortOperation) => {\r\n    const countries = [...this.state.countries];\r\n    console.table(countries);\r\n    countries.sort(sortOperation);\r\n    this.setState({ countries });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.totalConfirmed(this.state.countries)}\r\n        <div className=\"card text-center\">\r\n          <div className=\"card-header\">Featured Covid19</div>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">Covid 19 Global Report</h5>\r\n            <p className=\"card-text\">\r\n              List of Global report for Covid19, this live data gets from Johns\r\n              Hopkins University\r\n            </p>\r\n            <a\r\n              href=\"https://coronavirus.jhu.edu/\"\r\n              target=\"_blank\"\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Johns Hopkins University\r\n            </a>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">2 days ago</div>\r\n        </div>\r\n\r\n        <TableReport\r\n          report={this.state.countries}\r\n          onSortByCountryName={this.handleOnSortByCountryName}\r\n          onSortByConfirmed={this.handleOnSortByConfirmed}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FetchJson;\r\n","import React, { Component } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nclass About extends Component {\r\n  state = {};\r\n  notify = () => toast(\"Wow so easy !\");\r\n  render() {\r\n    return (\r\n      <div>\r\n        About Page!\r\n        <button onClick={this.notify}>Notify !</button>\r\n        <ToastContainer />\r\n        <div className=\"footer\">Footer</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Navbar\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" exact to=\"/\">\r\n                Home\r\n                {/* Home <span className=\"sr-only\">(current)</span> */}\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/About\">\r\n                About\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"navbarDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Dropdown\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Action\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Another action\r\n                </a>\r\n                <div className=\"dropdown-divider\"></div>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Something else here\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a\r\n                className=\"nav-link disabled\"\r\n                href=\"#\"\r\n                tabIndex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                Disabled\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <footer\r\n          className=\"page-footer font-small teal pt-4 pt-success bg-dark\"\r\n          style={{ color: \"white\" }}\r\n        >\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                <h5 className=\"text-uppercase font-weight-bold\">\r\n                  Footer text 1\r\n                </h5>\r\n                <p>\r\n                  Lorem ipsum dolor sit, amet consectetur adipisicing elit.\r\n                  Expedita sapiente sint, nulla, nihil repudiandae commodi\r\n                  voluptatibus corrupti animi sequi aliquid magnam debitis,\r\n                  maxime quam recusandae harum esse fugiat. Itaque, culpa?\r\n                </p>\r\n              </div>\r\n\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n\r\n              <div className=\"col-md-6 mb-md-0 mb-3\">\r\n                <h5 className=\"text-uppercase font-weight-bold\">\r\n                  Footer text 2\r\n                </h5>\r\n                <p>\r\n                  Lorem ipsum, dolor sit amet consectetur adipisicing elit.\r\n                  Optio deserunt fuga perferendis modi earum commodi aperiam\r\n                  temporibus quod nulla nesciunt aliquid debitis ullam omnis\r\n                  quos ipsam, aspernatur id excepturi hic.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"footer-copyright text-center py-3\">\r\n            © 2020 Copyright:\r\n            <a href=\"https://github.com/NahomKibreab/covid19-react-project\">\r\n              {\" \"}\r\n              Nahom Mehanzel\r\n            </a>\r\n          </div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FetchJson from \"./component/FetchJson\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport About from \"./component/About\";\nimport Navigation from \"./component/Navigation\";\nimport Footer from \"./component/Footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />\n      <Switch>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/\" component={FetchJson} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}